(define (domain pr2-tamp)
  (:requirements :strips :equality :action-costs)
  (:types arm wuti grasp config pose trajectory)
  (:predicates
    (IsArm ?a - arm)
    (Controllable ?a - arm)
    (Stackable ?o - wuti ?r - wuti)
    (Sink ?r - wuti)
    (Stove ?r - wuti)

    (IsPose ?o - wuti ?p - pose)
    (IsGrasp ?o - wuti ?g - grasp)
    (Kin ?a - arm ?o - wuti ?p - pose ?g - grasp ?q - config ?t - trajectory)
    (BaseMotion ?q1 - config ?t - trajectory ?q2 - config)
    (Supported ?o - wuti ?p - pose ?r - wuti)

    (AtPose ?o - wuti ?p - pose)
    (AtGrasp ?a - arm ?o - wuti ?g - grasp)
    (Graspable ?o - wuti)
    (HandEmpty ?a - arm)
    (AtBConf ?q - config)
    (IsBConf ?q - config)

    (CanMove)
    (Cleaned ?o - wuti)
    (Cooked ?o - wuti)
    (CanOperate)

    (On ?o - wuti ?r - wuti)
    (Holding ?a - arm ?o - wuti)
  )

  (:functions
      (total-cost) - number
  )

  (:action move_base
    :parameters (?q1 - config ?q2 - config ?t - trajectory)
    :precondition (and (BaseMotion ?q1 ?t ?q2)
                       (AtBConf ?q1) (CanMove)
                       )
    :effect (and (AtBConf ?q2)
                 (not (AtBConf ?q1)) (not (CanMove))
                 (increase (total-cost) 200)
                 (not (CanOperate))
                 )
  )

  (:action pick
    :parameters (?a - arm ?o - wuti ?p - pose ?g - grasp ?q - config ?t - trajectory)
    :precondition (and (Kin ?a ?o ?p ?g ?q ?t)
                       (AtPose ?o ?p) (HandEmpty ?a) (AtBConf ?q)
                       )
    :effect (and (AtGrasp ?a ?o ?g) (CanMove)
                 (not (AtPose ?o ?p)) (not (HandEmpty ?a))
                 (increase (total-cost) 100)
                 (not (CanOperate))
                 )
  )

  (:action place
    :parameters (?a - arm ?o - wuti ?p - pose ?g - grasp ?q - config ?t - trajectory)
    :precondition (and (Kin ?a ?o ?p ?g ?q ?t)
                       (AtGrasp ?a ?o ?g) (AtBConf ?q)
                       )
    :effect (and (AtPose ?o ?p) (HandEmpty ?a) (CanMove)
                 (not (AtGrasp ?a ?o ?g))
                 (increase (total-cost) 100)
                 (CanOperate)
                 )
  )

  (:action clean
    :parameters (?o - wuti ?r - wuti)
    :precondition (and (Stackable ?o ?r) (Sink ?r)
                       (On ?o ?r)
                       (CanOperate)
                       )
    :effect (and (Cleaned ?o)
                 (increase (total-cost) 50)
                 (not (CanOperate))
                 )
  )
  
  (:action cook
    :parameters (?o - wuti ?r - wuti)
    :precondition (and (Stackable ?o ?r) (Stove ?r)
                       (On ?o ?r) (Cleaned ?o)
                       (CanOperate)
                       )
    :effect (and (Cooked ?o)
                 (not (Cleaned ?o))
                 (increase (total-cost) 50)
                 (not (CanOperate))
                 )
  )

  (:derived (On ?o - wuti ?r - wuti)
    (exists (?p) (and (Supported ?o ?p ?r)
                      (AtPose ?o ?p))
                      )
  )
  (:derived (Holding ?a - arm ?o - wuti)
    (exists (?g) (and (IsArm ?a) (IsGrasp ?o ?g)
                      (AtGrasp ?a ?o ?g))
                      )
  )

)